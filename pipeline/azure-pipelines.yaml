trigger:
  branches:
    include:
      - '*'  # Trigger pipeline on all branches

pr:
  branches:
    include:
      - main  # Trigger pipeline on PRs to the 'main' branch

variables:
  terraformVersion: '1.5.0'  # Specify the Terraform version
  awsRegion: 'us-east-2'  # AWS Region to deploy to (adjust as needed)
  workingDirectory: 'example'  # Set working directory to 'example'
  group: ado-tf-aws-vpc

jobs:
- job: Terraform
  displayName: 'Terraform Provisioning'
  pool:
    vmImage: 'ubuntu-latest'  # Use an Ubuntu agent
    workingDirectory: $(Build.SourcesDirectory)\$(workingDirectory)  # Set working directory for all steps in the job
  steps:
    # Install Terraform
    - task: UseTerraform@0
      inputs:
        version: $(terraformVersion)

    # Step 1: Terraform initialization and validation
    - script: |
        terraform init
        terraform validate
      displayName: 'Terraform Init and Validate'

    # Step 2: Terraform Plan (Run on non-main branches or PRs to main)
    - script: |
        terraform plan -out=tfplan
      displayName: 'Terraform Plan'
      condition: |
        and(
          ne(variables['Build.SourceBranchName'], 'refs/heads/main'),  # Trigger if not on main
          or(contains(variables['Build.SourceBranchName'], 'refs/pull'),  # Trigger for PRs to main
          eq(variables['Build.SourceBranchName'], 'refs/heads/main'))
        )

    # Step 3: Terraform Apply (Run only on main branch)
    - script: |
        terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply'
      condition: eq(variables['Build.SourceBranchName'], 'refs/heads/main')